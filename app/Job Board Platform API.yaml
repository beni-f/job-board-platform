openapi: 3.0.3
info:
  title: Job Board Platform API
  version: 1.0.0
  description: API for Job Board Platform
paths:
  /api/jobs/:
    get:
      operationId: jobs_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: location
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Job'
          description: ''
  /api/jobs/{job_id}/applications/{application_id}/update/:
    put:
      operationId: jobs_applications_update_update
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplicationStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobApplicationStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobApplicationStatus'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationStatus'
          description: ''
    patch:
      operationId: jobs_applications_update_partial_update
      parameters:
      - in: path
        name: application_id
        schema:
          type: integer
        required: true
      - in: path
        name: job_id
        schema:
          type: integer
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJobApplicationStatus'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJobApplicationStatus'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJobApplicationStatus'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplicationStatus'
          description: ''
  /api/jobs/{job_pk}/applications/{id}/:
    get:
      operationId: jobs_applications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: job_pk
        schema:
          type: integer
        required: true
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
          description: ''
    put:
      operationId: jobs_applications_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: job_pk
        schema:
          type: integer
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobApplication'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
          description: ''
    patch:
      operationId: jobs_applications_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: job_pk
        schema:
          type: integer
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJobApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJobApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJobApplication'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
          description: ''
    delete:
      operationId: jobs_applications_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      - in: path
        name: job_pk
        schema:
          type: integer
        required: true
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/{id}/:
    get:
      operationId: jobs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    put:
      operationId: jobs_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    patch:
      operationId: jobs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedJob'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedJob'
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
    delete:
      operationId: jobs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/jobs/{id}/applications/:
    get:
      operationId: jobs_applications_list
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - jobs
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobApplication'
          description: ''
  /api/jobs/{id}/applications/create/:
    post:
      operationId: jobs_applications_create_create
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobApplication'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/JobApplication'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/JobApplication'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobApplication'
          description: ''
  /api/jobs/create/:
    post:
      operationId: jobs_create_create
      tags:
      - jobs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Job'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: ''
  /api/login/:
    post:
      operationId: login_create
      tags:
      - login
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/register/:
    post:
      operationId: register_create
      tags:
      - register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUser'
        required: true
      security:
      - jwtAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
components:
  schemas:
    CustomUser:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        role:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/RoleEnum'
          - $ref: '#/components/schemas/NullEnum'
        password:
          type: string
          writeOnly: true
          maxLength: 128
      required:
      - email
      - password
      - username
    Job:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
        recruiter:
          type: integer
          readOnly: true
        description:
          type: string
        location:
          type: string
          maxLength: 100
        category:
          type: integer
        salary:
          type: number
          format: double
        custom_category:
          type: string
          maxLength: 100
        date_posted:
          type: string
          format: date-time
          readOnly: true
        job_deadline:
          type: string
          format: date-time
      required:
      - date_posted
      - description
      - job_deadline
      - location
      - recruiter
      - salary
      - title
    JobApplication:
      type: object
      properties:
        job:
          type: integer
        applicant:
          type: integer
          readOnly: true
        application_date:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        cover_letter:
          type: string
        resume:
          type: string
          format: uri
          nullable: true
      required:
      - applicant
      - application_date
      - cover_letter
      - job
      - status
    JobApplicationStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - status
    NullEnum:
      enum:
      - null
    PatchedJob:
      type: object
      properties:
        title:
          type: string
          maxLength: 100
        recruiter:
          type: integer
          readOnly: true
        description:
          type: string
        location:
          type: string
          maxLength: 100
        category:
          type: integer
        salary:
          type: number
          format: double
        custom_category:
          type: string
          maxLength: 100
        date_posted:
          type: string
          format: date-time
          readOnly: true
        job_deadline:
          type: string
          format: date-time
    PatchedJobApplication:
      type: object
      properties:
        job:
          type: integer
        applicant:
          type: integer
          readOnly: true
        application_date:
          type: string
          format: date-time
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          readOnly: true
        cover_letter:
          type: string
        resume:
          type: string
          format: uri
          nullable: true
    PatchedJobApplicationStatus:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/StatusEnum'
    RoleEnum:
      enum:
      - admin
      - job_seeker
      - employer
      type: string
      description: |-
        * `admin` - Admin
        * `job_seeker` - Job Seeker
        * `employer` - Employer
    StatusEnum:
      enum:
      - pending
      - accepted
      - rejected
      type: string
      description: |-
        * `pending` - Pending
        * `accepted` - Accepted
        * `rejected` - Rejected
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
